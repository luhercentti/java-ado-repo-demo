# azure-pipelines.yml
# Complete Azure DevOps CI/CD Pipeline for Java App with Terraform Infrastructure
# SOLUTION: Single job pipeline - no stages, no parallelism required

trigger:
  branches:
    include:
    - main

variables:
  # Maven and Java settings
  - name: mavenPomFile
    value: 'pom.xml'
  - name: javaVersion
    value: '11'
  
  # Azure Container Registry settings (will be populated by Terraform outputs)
  - name: imageRepository
    value: 'java-simple-app'
  - name: dockerfilePath
    value: 'Dockerfile'
  
  # Azure Resource settings
  - name: azureSubscription
    value: 'Azure-lhc-tests-serviceconnection'
  
  # Terraform settings
  - name: terraformVersion
    value: '1.5.7'
  - name: terraformWorkingDirectory
    value: '$(System.DefaultWorkingDirectory)/infrastructure'
  
  # Dynamic variables
  - name: imageTag
    value: '$(Build.BuildId)'

# Single job pipeline - no parallelism required
jobs:
- job: CompleteDeployment
  displayName: 'Complete CI/CD Deployment Pipeline'
  pool:
    vmImage: 'ubuntu-latest'
  
  steps:
  # ===== CHECKOUT =====
  - checkout: self
    displayName: 'Checkout Repository'
